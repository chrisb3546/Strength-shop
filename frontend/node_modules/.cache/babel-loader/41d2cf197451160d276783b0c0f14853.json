{"ast":null,"code":"export const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  };\n};\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  };\n};\nexport const createNewUser = user => {\n  return {\n    type: \"CREATE_NEW_USER\",\n    user\n  };\n};\nexport const login = credentials => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(res => res.json()).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch(setCurrentUser(user));\n      }\n    });\n  };\n};\nexport const findCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      }\n    }).then(res => res.json()).then(user => {\n      if (user.error) {\n        console.log(user.error);\n      } else {\n        dispatch(setCurrentUser(user));\n      }\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch(clearCurrentUser());\n    return fetch(\"http://localhost:3001/logout\", {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};\nexport const signup = credentials => {\n  return dispatch => {\n    const userInfo = {\n      user: credentials\n    };\n    return fetch(\"http://localhost:3001/users\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    }).then(res => res.json()).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch(setCurrentUser(user));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/selinnaescabi/Development/code/strength-shop/frontend/src/actions/currentUser.js"],"names":["setCurrentUser","user","type","clearCurrentUser","createNewUser","login","credentials","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","error","alert","findCurrentUser","console","log","logout","signup","userInfo"],"mappings":"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","sourcesContent":["export const setCurrentUser = user =>{\n     return{\n        type: \"SET_CURRENT_USER\",\n        user\n    }\n}\n\nexport const clearCurrentUser = () => {\n   \n    return {\n        type: \"CLEAR_CURRENT_USER\"\n    }\n}\n\nexport const createNewUser = user =>{\n    return{\n       type: \"CREATE_NEW_USER\",\n       user\n   }\n}\n\nexport const login = credentials => {\n   return dispatch => {\n        return fetch(\"http://localhost:3001/login\", {\n            credentials: \"include\", \n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n\n                },\n                body: JSON.stringify(credentials)\n        }) \n        .then(res => res.json())\n        .then(user => {\n            if(user.error){\n                alert(user.error)\n            }\n            else{\n                dispatch(setCurrentUser(user))\n            }\n\n        })\n        \n    }\n\n}\n\nexport const findCurrentUser = () => {\n    \n    return dispatch => {\n        return fetch(\"http://localhost:3001/get_current_user\", {\n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n\n            },\n            \n    }) \n    .then(res => res.json())\n    .then(user => {\n        if(user.error){\n            console.log(user.error)\n        }\n        else{\n            dispatch(setCurrentUser(user))\n        }\n\n    })\n    }\n\n}\n\n\n\nexport const logout = () =>  {\n    return (dispatch) => {\n        dispatch(clearCurrentUser())\n        return fetch(\"http://localhost:3001/logout\",{\n            credentials: \"include\",\n            method: \"DELETE\"\n        })\n    }\n\n}\n\n\n\nexport const signup = credentials => {\n   \n    return dispatch => {\n        const userInfo ={\n            user: credentials\n        }\n          return fetch(\"http://localhost:3001/users\", {\n              credentials: \"include\", \n                  method: \"POST\",\n                  headers: {\n                      \"Content-Type\": \"application/json\",\n                      \"Accept\": \"application/json\"\n  \n                  },\n                  body: JSON.stringify(userInfo)\n          }) \n          .then(res => res.json())\n          .then(user => {\n              if(user.error){\n                  alert(user.error)\n              }\n              else{\n                  dispatch(setCurrentUser(user))\n              }\n  \n          })\n          \n      }\n  \n  }"]},"metadata":{},"sourceType":"module"}